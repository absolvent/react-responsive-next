{"version":3,"sources":["../src/helpers.js"],"names":["getMediaByType","mediaType","media","desktop","getMediaDefaultWidthByType","mediaItem","minWidth","getMediaMinWidthByType","getMediaMaxWidthByType","maxWidth","mediaQueryBuilder","from","to","mediaQueryParts","fromNumeric","Number","toNumeric","isNaN","push","Error","TAG","join","isString","value","String","isStringOrNumber"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAYC,KAAZ,EAAsB;AAC3C,MAAIA,KAAK,CAACD,SAAD,CAAT,EAAsB;AACpB,WAAOC,KAAK,CAACD,SAAD,CAAZ;AACD;;AACD,SAAOC,KAAK,CAACC,OAAb;AACD,CALD;;AAOO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACH,SAAD,EAAYC,KAAZ,EAAsB;AAC9D,MAAMG,SAAS,GAAGL,cAAc,CAACC,SAAD,EAAYC,KAAZ,CAAhC;AACA,SAAOG,SAAS,IAAIA,SAAS,CAACC,QAAvB,GAAkCD,SAAS,CAACC,QAA5C,GAAuD,CAAC,CAA/D;AACD,CAHM;;;;AAKA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACN,SAAD,EAAYC,KAAZ,EAAsB;AAC1D,MAAMG,SAAS,GAAGL,cAAc,CAACC,SAAD,EAAYC,KAAZ,CAAhC;AACA,SAAOG,SAAS,IAAIA,SAAS,CAACC,QAAvB,GAAkCD,SAAS,CAACC,QAA5C,GAAuD,CAAC,CAA/D;AACD,CAHM;;;;AAKA,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACP,SAAD,EAAYC,KAAZ,EAAsB;AAC1D,MAAMG,SAAS,GAAGL,cAAc,CAACC,SAAD,EAAYC,KAAZ,CAAhC;AACA,SAAOG,SAAS,IAAIA,SAAS,CAACI,QAAvB,GAAkCJ,SAAS,CAACI,QAA5C,GAAuD,CAAC,CAA/D;AACD,CAHM;;;;AAMA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD,EAAOC,EAAP,EAAc;AAC7C,MAAMC,eAAe,GAAG,EAAxB;AACA,MAAMC,WAAW,GAAGC,MAAM,CAACJ,IAAD,CAA1B;AACA,MAAMK,SAAS,GAAGD,MAAM,CAACH,EAAD,CAAxB;AAEA,MAAI,CAACG,MAAM,CAACE,KAAP,CAAaH,WAAb,CAAL,EAAgCD,eAAe,CAACK,IAAhB,uBAAoCP,IAApC;AAChC,MAAI,CAACI,MAAM,CAACE,KAAP,CAAaD,SAAb,CAAL,EAA8BH,eAAe,CAACK,IAAhB,uBAAoCN,EAApC;;AAE9B,MAAI,CAACG,MAAM,CAACE,KAAP,CAAaH,WAAb,CAAD,IAA8B,CAACC,MAAM,CAACE,KAAP,CAAaD,SAAb,CAA/B,IAA0DF,WAAW,GAAGE,SAA5E,EAAuF;AACrF,UAAM,IAAIG,KAAJ,WAAaC,kBAAb,oBAA0BN,WAA1B,wCAAmEE,SAAnE,aAAN;AACD;;AAED,SAAOH,eAAe,CAACQ,IAAhB,CAAqB,OAArB,CAAP;AACD,CAbM;;;;AAeA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAK,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYC,MAAnD;AAAA,CAAtB;;;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAF,KAAK;AAAA,SAAM,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYC,MAA/C,IAA0D,CAACT,MAAM,CAACE,KAAP,CAAaF,MAAM,CAACQ,KAAD,CAAnB,CAAhE;AAAA,CAA9B","sourcesContent":["import { TAG } from './default-config';\n\nconst getMediaByType = (mediaType, media) => {\n  if (media[mediaType]) {\n    return media[mediaType];\n  }\n  return media.desktop;\n};\n\nexport const getMediaDefaultWidthByType = (mediaType, media) => {\n  const mediaItem = getMediaByType(mediaType, media);\n  return mediaItem && mediaItem.minWidth ? mediaItem.minWidth : -1;\n};\n\nexport const getMediaMinWidthByType = (mediaType, media) => {\n  const mediaItem = getMediaByType(mediaType, media);\n  return mediaItem && mediaItem.minWidth ? mediaItem.minWidth : -1;\n};\n\nexport const getMediaMaxWidthByType = (mediaType, media) => {\n  const mediaItem = getMediaByType(mediaType, media);\n  return mediaItem && mediaItem.maxWidth ? mediaItem.maxWidth : -1;\n};\n\n\nexport const mediaQueryBuilder = (from, to) => {\n  const mediaQueryParts = [];\n  const fromNumeric = Number(from);\n  const toNumeric = Number(to);\n\n  if (!Number.isNaN(fromNumeric)) mediaQueryParts.push(`(min-width: ${from}px)`);\n  if (!Number.isNaN(toNumeric)) mediaQueryParts.push(`(max-width: ${to}px)`);\n\n  if (!Number.isNaN(fromNumeric) && !Number.isNaN(toNumeric) && fromNumeric > toNumeric) {\n    throw new Error(`${TAG} from (${fromNumeric}) value is larger than to (${toNumeric}) value`)\n  }\n\n  return mediaQueryParts.join(' and ');\n};\n\nexport const isString = value => (typeof value === 'string' || value instanceof String);\nexport const isStringOrNumber = value => ((typeof value === 'string' || value instanceof String) || !Number.isNaN(Number(value)));\n"],"file":"helpers.js"}