{"version":3,"sources":["../src/components.js"],"names":["MediaQueryWrapper","props","children","other","console","log","fakeWidth","values","deviceWidth","width","propTypes","oneOfType","node","func","component","string","dispatch","isRequired","number","defaultProps","responsiveWrapper","p","XsScreen","maxWidth","sm","SmScreen","query","md","MdScreen","lg","LgScreen","XsScreenHidden","minWidth","SmScreenHidden","MdScreenHidden","LgScreenHidden","DesktopScreen","MobileScreen"],"mappings":";;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AAEO,IAAMA,oBAAoB,SAApBA,iBAAoB,GAAgB;AAAA,MAAfC,KAAe,uEAAP,EAAO;AAAA,MAEvCC,QAFuC,GAEhBD,KAFgB,CAEvCC,QAFuC;AAAA,MAE1BC,KAF0B,0CAEhBF,KAFgB;AAG/CG,UAAQC,GAAR,CAAY,wBAAZ,EAAsCL,kBAAkBM,SAAxD,EAAmEL,KAAnE;AACA,MAAMM,SAAS;AAAEC,iBAAaR,kBAAkBM,SAAjC;AAA4CG,WAAOT,kBAAkBM;AAArE,GAAf;AACA,SACE,kFAAgBH,KAAhB,EAA2B;AAAEI;AAAF,GAA3B,GACGL,QADH,CADF;AAKD,CAVM;;;AAYPF,kBAAkBU,SAAlB,GAA8B;AAC5BR,YAAU,mBAAUS,SAAV,CAAoB,CAAC,mBAAUC,IAAX,EAAiB,mBAAUC,IAA3B,CAApB,CADkB;AAE5BC,aAAW,mBAAUH,SAAV,CAAoB,CAAC,mBAAUC,IAAX,EAAiB,mBAAUC,IAA3B,EAAiC,mBAAUE,MAA3C,CAApB,CAFiB;AAG5BC,YAAU,mBAAUH,IAAV,CAAeI,UAHG;AAI5BX,aAAW,mBAAUY,MAAV,CAAiBD;AAJA,CAA9B;AAOAjB,kBAAkBmB,YAAlB,GAAiC;AAC/BjB,YAAU,IADqB;AAE/BY,aAAW;AAFoB,CAAjC;;AAKO,IAAMM,oBAAoB,SAApBA,iBAAoB;AAAA,MAACnB,KAAD,uEAAS,EAAT;AAAA,SAAiB;AAAA,WAAKD,6CAAuBC,KAAvB,EAAiCoB,CAAjC,EAAL;AAAA,GAAjB;AAAA,CAA1B;;;AAGA,IAAMC,WAAWF,kBAAkB;AAAEG,YAAU,sBAAYC,EAAZ,GAAiB;AAA7B,CAAlB,CAAjB;;AACA,IAAMC,WAAWL,kBAAkB;AAAEM,+BAAsB,sBAAYF,EAAlC,iCAA2D,sBAAYG,EAAZ,GAAiB,CAA5E;AAAF,CAAlB,CAAjB;;AACA,IAAMC,WAAWR,kBAAkB;AAAEM,+BAAsB,sBAAYC,EAAlC,iCAA2D,sBAAYE,EAAZ,GAAiB,CAA5E;AAAF,CAAlB,CAAjB;;AACA,IAAMC,WAAWV,kBAAkB;AAAEM,+BAAsB,sBAAYG,EAAlC;AAAF,CAAlB,CAAjB;;AAEA,IAAME,iBAAiBX,kBAAkB;AAAEY,YAAU,sBAAYR;AAAxB,CAAlB,CAAvB;;AACA,IAAMS,iBAAiBb,kBAAkB;AAAEM,+BAAsB,sBAAYF,EAAZ,GAAiB,CAAvC,8BAA4D,sBAAYG,EAAxE;AAAF,CAAlB,CAAvB;;AACA,IAAMO,iBAAiBd,kBAAkB;AAAEM,+BAAsB,sBAAYC,EAAZ,GAAiB,CAAvC,8BAA4D,sBAAYE,EAAxE;AAAF,CAAlB,CAAvB;;AACA,IAAMM,iBAAiBf,kBAAkB;AAAEG,YAAU,sBAAYM,EAAZ,GAAiB;AAA7B,CAAlB,CAAvB;;AAIA,IAAMO,gBAAgBhB,kBAAkB;AAAEY,YAAU,sBAAYL;AAAxB,CAAlB,CAAtB;;AACA,IAAMU,eAAejB,kBAAkB;AAAEG,YAAU,sBAAYI,EAAZ,GAAiB;AAA7B,CAAlB,CAArB","file":"components.js","sourcesContent":["// see also components/ScreenSize for another way to consume this data\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport MediaQuery from 'react-responsive'\nimport { breakPoints } from './defaults'\n\nexport const MediaQueryWrapper = (props = {}) => {\n  // eslint-disable-next-line no-unused-vars\n  const { children, ...other } = props;\n  console.log('MediaQueryWrapper func', MediaQueryWrapper.fakeWidth, props);\n  const values = { deviceWidth: MediaQueryWrapper.fakeWidth, width: MediaQueryWrapper.fakeWidth };\n  return (\n    <MediaQuery {...other} {...{ values }} >\n      {children}\n    </MediaQuery>\n  )\n};\n\nMediaQueryWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.string]),\n  dispatch: PropTypes.func.isRequired,\n  fakeWidth: PropTypes.number.isRequired,\n};\n\nMediaQueryWrapper.defaultProps = {\n  children: null,\n  component: 'div',\n};\n\nexport const responsiveWrapper = (props = {}) => (p => MediaQueryWrapper({ ...props, ...p }));\n\n\nexport const XsScreen = responsiveWrapper({ maxWidth: breakPoints.sm - 1 });\nexport const SmScreen = responsiveWrapper({ query: `(min-width: ${breakPoints.sm}px) and (max-width: ${breakPoints.md - 1}px)` });\nexport const MdScreen = responsiveWrapper({ query: `(min-width: ${breakPoints.md}px) and (max-width: ${breakPoints.lg - 1}px)` });\nexport const LgScreen = responsiveWrapper({ query: `(min-width: ${breakPoints.lg}px)` });\n\nexport const XsScreenHidden = responsiveWrapper({ minWidth: breakPoints.sm });\nexport const SmScreenHidden = responsiveWrapper({ query: `(max-width: ${breakPoints.sm - 1}px), (min-width: ${breakPoints.md}px)` });\nexport const MdScreenHidden = responsiveWrapper({ query: `(max-width: ${breakPoints.md - 1}px), (min-width: ${breakPoints.lg}px)` });\nexport const LgScreenHidden = responsiveWrapper({ maxWidth: breakPoints.lg - 1 });\n\nexport { XsScreen as PhoneScreen }\nexport { SmScreen as TabletScreen }\nexport const DesktopScreen = responsiveWrapper({ minWidth: breakPoints.md });\nexport const MobileScreen = responsiveWrapper({ maxWidth: breakPoints.md - 1 });\n\nexport { XsScreenHidden as PhoneScreenHidden }\nexport { SmScreenHidden as TabletScreenHidden }\nexport { MobileScreen as DesktopScreenHidden }\nexport { DesktopScreen as MobileScreenHidden }\n"]}