{"version":3,"sources":["../src/components.js"],"names":["MediaQueryWrapper","props","children","isInvertMatch","other","values","deviceWidth","fakeWidth","width","matches","propTypes","PropTypes","oneOfType","node","func","component","string","dispatch","isRequired","number","bool","defaultProps","responsiveWrapper","p","generateShowHideComponent","media","ReactResponsiveConnect","customConfig","defaultConfig","on","from","to","fromValue","Number","toValue","query","mediaQuery","isHideComponent","Error","TAG","undefined","Show","Hide","defaultMedia","PhoneScreen","phone","TabletScreen","tablet","DesktopAndUpScreen","desktop","PhoneAndTabletScreen","maxWidth","TabletAndUpScreen","minWidth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport MediaQuery from 'react-responsive'\nimport { defaultConfig, TAG } from './default-config'\nimport { ReactResponsiveConnect } from './react-responsive-connect';\nimport { getMedia } from './media'\nimport { getMediaMinWidthByType, getMediaMaxWidthByType, mediaQueryBuilder, isStringOrNumber, isString } from './helpers'\n\nexport const MediaQueryWrapper = (props = {}) => {\n  // eslint-disable-next-line no-unused-vars\n  const { children, isInvertMatch,  ...other } = props;\n  const values = { deviceWidth: MediaQueryWrapper.fakeWidth, width: MediaQueryWrapper.fakeWidth };\n  return (\n    <MediaQuery {...other} {...{ values }} >\n      {(matches) => {\n        if (matches) {\n          return isInvertMatch ? null : children;\n        }\n        return isInvertMatch ? children : null;\n      }}\n    </MediaQuery>\n  )\n};\n\nMediaQueryWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.string]),\n  dispatch: PropTypes.func.isRequired,\n  fakeWidth: PropTypes.number.isRequired,\n  isInvertMatch: PropTypes.bool,\n};\n\nMediaQueryWrapper.defaultProps = {\n  isInvertMatch: false,\n};\n\nMediaQueryWrapper.defaultProps = {\n  children: null,\n  component: 'div',\n};\n\nexport const responsiveWrapper = (props = {}) => (p => MediaQueryWrapper({ ...props, ...p }));\n\nconst generateShowHideComponent = isHideComponent => (props) => {\n  const media = getMedia(ReactResponsiveConnect.customConfig || defaultConfig);\n  const {\n    on,\n    from,\n    to,\n    children,\n  } = props;\n  const fromValue = Number.isNaN(Number(from)) ? getMediaMinWidthByType(from, media) : from;\n  const toValue = Number.isNaN(Number(to)) ? getMediaMaxWidthByType(to, media) : to;\n\n  if (on) {\n    if (media[on]) {\n      return MediaQueryWrapper({\n        query: media[on].mediaQuery,\n        isInvertMatch: isHideComponent,\n        children,\n      });\n    }\n    throw new Error(`${TAG} No ${on} definition in media configuration`);\n  }\n\n  if (from !== undefined && to !== undefined) {\n    return MediaQueryWrapper({\n      query: mediaQueryBuilder(fromValue, toValue),\n      isInvertMatch: isHideComponent,\n      children,\n    });\n  } else if (from !== undefined) {\n    return MediaQueryWrapper({\n      query: mediaQueryBuilder(fromValue, undefined),\n      isInvertMatch: isHideComponent,\n      children,\n    });\n  } else if (to !== undefined) {\n    return MediaQueryWrapper({\n      query: mediaQueryBuilder(undefined, toValue),\n      isInvertMatch: isHideComponent,\n      children,\n    });\n  }\n  return null;\n};\n\nconst propTypes = {\n  from: (props) => {\n    const { on, from } = props;\n    if (from !== undefined && !isStringOrNumber(from)) {\n      return new Error(`${TAG} Improper value type of the 'from' prop (${from}), only a String or a Number`);\n    } else if (from && on) {\n      return new Error(`${TAG} Used excluding props from and on`);\n    }\n    return null\n  },\n  on: (props) => {\n    const { on, from, to } = props;\n    if (on && !isString(on)) {\n      return new Error(`${TAG} Improper value type of the 'on' prop (${on}), only a String`);\n    } else if (on && (from || to)) {\n      return new Error(`${TAG} Used excluding props for and from or to!`);\n    }\n    return null;\n  },\n  to: ({ on, to }) => {\n    if (to !== undefined && !isStringOrNumber(to)) {\n      return new Error(`${TAG} Improper value type of the 'to' prop (${to}), only a String or a Number`);\n    } else if (to && on) {\n      return new Error(`${TAG} Used excluding props from and on`);\n    }\n    return null;\n  },\n};\n\nexport const Show = generateShowHideComponent(false);\nShow.propTypes = propTypes;\n\nexport const Hide = generateShowHideComponent(true);\nHide.propTypes = propTypes;\n\n// Legacy for versions < 0.8.0\n// WARNING: Works only with the default config\nconst defaultMedia = getMedia(defaultConfig);\nexport const PhoneScreen = responsiveWrapper({ query: defaultMedia.phone.mediaQuery });\nexport const TabletScreen = responsiveWrapper({ query: defaultMedia.tablet.mediaQuery });\nexport const DesktopAndUpScreen = responsiveWrapper({ query: defaultMedia.desktop.mediaQuery });\nexport const PhoneAndTabletScreen = responsiveWrapper({ query: `(max-width: ${defaultMedia.tablet.maxWidth}px)` });\nexport const TabletAndUpScreen = responsiveWrapper({ query: `(min-width: ${defaultMedia.tablet.minWidth}px)` });\n"],"file":"components.js"}