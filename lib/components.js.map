{"version":3,"sources":["../src/components.js"],"names":["MediaQueryWrapper","props","values","deviceWidth","width","children","isInvertMatch","other","process","browser","fakeWidth","contextService","require","get","matches","propTypes","PropTypes","oneOfType","node","func","component","string","dispatch","isRequired","number","bool","defaultProps","responsiveWrapper","p","generateShowHideComponent","isHideComponent","media","ReactResponsiveConnect","customConfig","defaultConfig","on","from","to","fromValue","Number","toValue","query","mediaQuery","Error","TAG","undefined","Show","displayName","Hide","defaultMedia","PhoneScreen","phone","TabletScreen","tablet","DesktopAndUpScreen","desktop","PhoneAndTabletScreen","maxWidth","TabletAndUpScreen","minWidth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport MediaQuery from 'react-responsive'\nimport isNaN from 'lodash/isNaN';\nimport { defaultConfig, TAG } from './default-config'\nimport { ReactResponsiveConnect } from './react-responsive-connect';\nimport { getMedia } from './media'\nimport { getMediaMinWidthByType, getMediaMaxWidthByType, mediaQueryBuilder, isStringOrNumber, isString } from './helpers'\n\nexport const MediaQueryWrapper = (props = {}) => {\n  // eslint-disable-next-line no-unused-vars\n  const values = { deviceWidth: 1, width: 1 };\n  const { children, isInvertMatch,  ...other } = props;\n\n  if (process.browser) {\n    values.deviceWidth = MediaQueryWrapper.fakeWidth;\n    values.width = MediaQueryWrapper.fakeWidth;\n  } else {\n    const contextService = require('request-context');\n    const width = contextService.get('request:responsive.detectedMediaWidth');\n    values.deviceWidth = width;\n    values.width = width;\n  }\n\n  return (\n    <MediaQuery {...other} {...{ values }} >\n      {(matches) => {\n        if (matches) {\n          return isInvertMatch ? null : children;\n        }\n        return isInvertMatch ? children : null;\n      }}\n    </MediaQuery>\n  )\n};\n\nMediaQueryWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.string]),\n  dispatch: PropTypes.func.isRequired,\n  fakeWidth: PropTypes.number.isRequired,\n  isInvertMatch: PropTypes.bool,\n};\n\nMediaQueryWrapper.defaultProps = {\n  isInvertMatch: false,\n};\n\nMediaQueryWrapper.defaultProps = {\n  children: null,\n  component: 'div',\n};\n\nexport const responsiveWrapper = (props = {}) => (p => MediaQueryWrapper({ ...props, ...p }));\n\nconst generateShowHideComponent = isHideComponent => (props) => {\n  const media = getMedia(ReactResponsiveConnect.customConfig || defaultConfig);\n  const {\n    on,\n    from,\n    to,\n    children,\n  } = props;\n  const fromValue = isNaN(Number(from)) ? getMediaMinWidthByType(from, media) : from;\n  const toValue = isNaN(Number(to)) ? getMediaMaxWidthByType(to, media) : to;\n\n  if (on) {\n    if (media[on]) {\n      return MediaQueryWrapper({\n        query: media[on].mediaQuery,\n        isInvertMatch: isHideComponent,\n        children,\n      });\n    }\n    throw new Error(`${TAG} No ${on} definition in media configuration`);\n  }\n\n  if (from !== undefined && to !== undefined) {\n    return MediaQueryWrapper({\n      query: mediaQueryBuilder(fromValue, toValue),\n      isInvertMatch: isHideComponent,\n      children,\n    });\n  } else if (from !== undefined) {\n    return MediaQueryWrapper({\n      query: mediaQueryBuilder(fromValue, undefined),\n      isInvertMatch: isHideComponent,\n      children,\n    });\n  } else if (to !== undefined) {\n    return MediaQueryWrapper({\n      query: mediaQueryBuilder(undefined, toValue),\n      isInvertMatch: isHideComponent,\n      children,\n    });\n  }\n  return null;\n};\n\nconst propTypes = {\n  from: (props) => {\n    const { on, from } = props;\n    if (from !== undefined && !isStringOrNumber(from)) {\n      return new Error(`${TAG} Improper value type of the 'from' prop (${from}), only a String or a Number`);\n    } else if (from && on) {\n      return new Error(`${TAG} Used excluding props from and on`);\n    }\n    return null\n  },\n  on: (props) => {\n    const { on, from, to } = props;\n    if (on && !isString(on)) {\n      return new Error(`${TAG} Improper value type of the 'on' prop (${on}), only a String`);\n    } else if (on && (from || to)) {\n      return new Error(`${TAG} Used excluding props for and from or to!`);\n    }\n    return null;\n  },\n  to: ({ on, to }) => {\n    if (to !== undefined && !isStringOrNumber(to)) {\n      return new Error(`${TAG} Improper value type of the 'to' prop (${to}), only a String or a Number`);\n    } else if (to && on) {\n      return new Error(`${TAG} Used excluding props from and on`);\n    }\n    return null;\n  },\n};\n\nexport const Show = generateShowHideComponent(false);\nShow.propTypes = propTypes;\nShow.displayName = 'Show';\n\nexport const Hide = generateShowHideComponent(true);\nHide.propTypes = propTypes;\nHide.displayName = 'Hide';\n\n\n// Legacy for versions < 0.8.0\n// WARNING: Works only with the default config\nconst defaultMedia = getMedia(defaultConfig);\nexport const PhoneScreen = responsiveWrapper({ query: defaultMedia.phone.mediaQuery });\nPhoneScreen.displayName = 'PhoneScreen';\nexport const TabletScreen = responsiveWrapper({ query: defaultMedia.tablet.mediaQuery });\nTabletScreen.displayName = 'TabletScreen';\nexport const DesktopAndUpScreen = responsiveWrapper({ query: defaultMedia.desktop.mediaQuery });\nDesktopAndUpScreen.displayName = 'DesktopAndUpScreen';\nexport const PhoneAndTabletScreen = responsiveWrapper({ query: `(max-width: ${defaultMedia.tablet.maxWidth}px)` });\nPhoneAndTabletScreen.displayName = 'PhoneAndTabletScreen';\nexport const TabletAndUpScreen = responsiveWrapper({ query: `(min-width: ${defaultMedia.tablet.minWidth}px)` });\nTabletAndUpScreen.displayName = 'TabletAndUpScreen';\n"],"file":"components.js"}