{"version":3,"sources":["../src/hoc.js"],"names":["hoc","window","innerWidth","document","documentElement","clientWidth","body","innerHeight","clientHeight","console","log","ReactResponsiveNextHoc","updateDeviceTypeByViewportSize","detectedMedia","mediaQueriesMatchers","forEach","mediaItem","type","matcher","matches","defaultWidth","save","secure","a1","a2","mediaType","media","desktop","args","newProps","env","req","device","eval","detectedMediaType","load","detectedMediaWidth","checkEnvironment","headers","ua","detectedDevice","userAgentMediaType","getDefaultMediaWidthByType","detectedMediaModel","model","newArgs","WrappedComponent","getInitialProps","fakeWidth","props","breakPoints","windowWidth","process","browser","mediaQuery","width","push","state","onResize","onResizeHandler","addEventListener","removeEventListener","Component","propTypes","shape","tablet","number","defaultProps"],"mappings":"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","file":"hoc.js","sourcesContent":["/* global require */\n\nimport debounce from 'lodash.debounce';\nimport matchMediaQuery from 'matchmediaquery';\nimport PropTypes from 'prop-types';\nimport Cookies from 'isomorphic-cookie';\nimport React from 'react';\nimport { MediaQueryWrapper } from './components';\nimport { getMedia } from './media';\nimport { breakPoints as defaultBreakPoints } from './defaults';\n\nexport const hoc = WrappedComponent => class ReactResponsiveNextHoc extends React.Component {\n\n  static propTypes = {\n    breakPoints: PropTypes.shape({\n      tablet: PropTypes.number,\n      desktop: PropTypes.number,\n    }),\n  };\n\n  static defaultProps = {\n    breakPoints: defaultBreakPoints,\n  };\n\n  static getBrowserWidth() {\n    return window.innerWidth ||\n      document.documentElement.clientWidth ||\n      document.body.clientWidth;\n  }\n\n  static getBrowserHeight() {\n    return window.innerHeight ||\n      document.documentElement.clientHeight ||\n      document.body.clientHeight;\n  }\n\n  static onResize() {\n    console.log('onResize');\n    ReactResponsiveNextHoc.updateDeviceTypeByViewportSize();\n  }\n\n  static updateDeviceTypeByViewportSize() {\n    console.log('getCurrentMedia');\n    let detectedMedia = null;\n    ReactResponsiveNextHoc.mediaQueriesMatchers.forEach((mediaItem) => {\n      console.log('mediaQueryItem', mediaItem.type, mediaItem.matcher.matches);\n      if (mediaItem.matcher.matches) {\n        if (!detectedMedia\n          || (detectedMedia && detectedMedia.defaultWidth < mediaItem.defaultWidth)) {\n          detectedMedia = mediaItem;\n        }\n      }\n    });\n\n    console.log('updateDeviceTypeByViewportSize', detectedMedia);\n    Cookies.save('detectedMediaWidth', detectedMedia.defaultWidth, { secure: false });\n    Cookies.save('detectedMediaType', detectedMedia.type, { secure: false });\n  }\n\n  static onMediaQueryMatch(a1, a2) {\n    console.log('onMediaQueryMatch', a1, a2);\n  }\n\n  static getDefaultMediaWidthByType(mediaType) {\n    const media = getMedia(defaultBreakPoints);\n    if (media[mediaType]) {\n      return media[mediaType].defaultWidth;\n    }\n    return media.desktop.defaultWidth;\n  }\n\n  static async getInitialProps(args = {}) {\n    let newProps = {\n      env: {},\n    };\n\n    if (args && args.req) {\n      const device = eval('require(\\'device\\')');\n      const detectedMediaType = Cookies.load('detectedMediaType', args.req);\n      const detectedMediaWidth = Cookies.load('detectedMediaWidth', args.req);\n      console.log('cookie detectedMediaWidth', detectedMediaWidth)\n      const checkEnvironment = ({ headers = {} } = {}) => {\n        const ua = headers['user-agent'] || headers['User-Agent'] || '';\n        const detectedDevice = device(ua);\n        return {\n          userAgentMediaType: detectedDevice.type,\n          detectedMediaType: detectedMediaType || detectedDevice.type,\n          detectedMediaWidth: detectedMediaWidth\n            || ReactResponsiveNextHoc.getDefaultMediaWidthByType(detectedDevice.type),\n          detectedMediaModel: detectedDevice.model || null,\n        }\n      };\n      newProps.env = checkEnvironment(args.req);\n    } else {\n      newProps.env = {\n        userAgentMediaType: null,\n        detectedMediaType: null,\n        detectedMediaWidth: 0,\n        detectedMediaModel: null,\n      };\n    }\n    const newArgs = {\n      ...args,\n      ...newProps,\n    };\n    if (WrappedComponent.getInitialProps) {\n      newProps = {\n        ...newProps,\n        ...await WrappedComponent.getInitialProps(newArgs),\n      };\n    }\n    MediaQueryWrapper.fakeWidth = newProps.env.detectedMediaWidth;\n    return newProps;\n  }\n\n  constructor(props) {\n    super(props);\n    ReactResponsiveNextHoc.mediaQueriesMatchers = [];\n\n    const { breakPoints } = this.props;\n    const windowWidth = process.browser ? window.innerWidth ||\n      document.documentElement.clientWidth ||\n      document.body.clientWidth : 1;\n\n    const media = getMedia(breakPoints);\n\n    Object.keys(media).forEach((type) => {\n      const { mediaQuery, defaultWidth } = media[type];\n      const matcher = matchMediaQuery(mediaQuery, { width: windowWidth }); // TODO: windowWidth?\n      ReactResponsiveNextHoc.mediaQueriesMatchers.push({\n        type,\n        matcher,\n        defaultWidth,\n      })\n    });\n    this.state = {\n      env: {},\n    };\n  }\n\n  componentDidMount() {\n    ReactResponsiveNextHoc.onResize();\n    this.onResizeHandler = debounce(ReactResponsiveNextHoc.onResize, 200);\n    window.addEventListener('resize', this.onResizeHandler, false);\n  }\n\n  componentWillUnmount() {\n    if (this.onResizeHandler) {\n      window.removeEventListener('resize', this.onResizeHandler, false);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <WrappedComponent {...this.state} {...this.props} />;\n      </div>\n    );\n  }\n};\n"]}