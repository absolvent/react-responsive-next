{"version":3,"sources":["../src/react-responsive-connect.js"],"names":["ReactResponsiveConnect","WrappedComponent","detectedMedia","ReactResponsiveNextHoc","mediaQueriesMatchers","forEach","mediaItem","matcher","matches","defaultWidth","previouslyDetectedMediaWidth","Cookies","load","save","secure","type","initialWidth","window","location","reload","updateDeviceTypeByViewportSize","detectedMediaWidth","args","newProps","env","req","device","eval","detectedMediaType","checkEnvironment","headers","ua","detectedDevice","userAgentMediaType","getDefaultMediaWidthByType","detectedMediaModel","model","res","cookie","maxAge","httpOnly","newArgs","getInitialProps","process","browser","MediaQueryWrapper","fakeWidth","contextService","require","set","mediaType","media","customConfig","defaultConfig","desktop","innerWidth","document","documentElement","clientWidth","body","props","config","Object","keys","mediaQuery","width","getBrowserWidth","push","state","onResizeHandler","onResize","addEventListener","onBeforeUnload","reloadPageIfIncorrectWidthDetected","removeEventListener","React","Component","propTypes","PropTypes","shape","breakPoints","any","devicesToBreakPoints","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,gBAAgB;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uDAKV;AACtC,YAAIC,aAAa,GAAG,IAApB;AACAC,QAAAA,sBAAsB,CAACC,oBAAvB,CAA4CC,OAA5C,CAAoD,UAACC,SAAD,EAAe;AACjE,cAAIA,SAAS,CAACC,OAAV,CAAkBC,OAAtB,EAA+B;AAC7B,gBAAI,CAACN,aAAD,IACEA,aAAa,IAAIA,aAAa,CAACO,YAAd,GAA6BH,SAAS,CAACG,YAD9D,EAC6E;AAC3EP,cAAAA,aAAa,GAAGI,SAAhB;AACD;AACF;AACF,SAPD;AAQA,YAAMI,4BAA4B,GAAGC,6BAAQC,IAAR,CAAa,oBAAb,KAAsC,IAA3E;;AAEAD,qCAAQE,IAAR,CAAa,oBAAb,EAAmCX,aAAa,CAACO,YAAjD,EAA+D;AAAEK,UAAAA,MAAM,EAAE;AAAV,SAA/D;;AACAH,qCAAQE,IAAR,CAAa,mBAAb,EAAkCX,aAAa,CAACa,IAAhD,EAAsD;AAAED,UAAAA,MAAM,EAAE;AAAV,SAAtD;;AAEA,YAAI,CAACJ,4BAAL,EAAmC;AACjC,cAAMM,YAAY,GAAGL,6BAAQC,IAAR,CAAa,mBAAb,KAAqC,IAA1D;;AACA,cAAII,YAAY,KAAKd,aAAa,CAACO,YAAnC,EAAiD;AAC/CQ,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF;AACF;AA1BiD;AAAA;AAAA,iCAuChC;AAChBhB,QAAAA,sBAAsB,CAACiB,8BAAvB;AACD;AAzCiD;AAAA;AAAA,uCA2C1B;AACtBjB,QAAAA,sBAAsB,CAACiB,8BAAvB;AACD;AA7CiD;AAAA;AAAA,2DA+CN;AAC1C,YAAMV,4BAA4B,GAAGC,6BAAQC,IAAR,CAAa,oBAAb,KAAsC,IAA3E;AACAT,QAAAA,sBAAsB,CAACiB,8BAAvB;;AACA,YAAMC,kBAAkB,GAAGV,6BAAQC,IAAR,CAAa,oBAAb,CAA3B;;AACA,YAAIF,4BAA4B,IAAKW,kBAAkB,KAAKX,4BAA5D,EAA2F;AACzFO,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF;AAtDiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwDrBG,kBAAAA,IAxDqB,2DAwDd,EAxDc;AAyD5CC,kBAAAA,QAzD4C,GAyDjC;AACbC,oBAAAA,GAAG,EAAE;AADQ,mBAzDiC;;AA6DhD,sBAAIF,IAAI,IAAIA,IAAI,CAACG,GAAjB,EAAsB;AACdC,oBAAAA,MADc,GACLC,IAAI,CAAC,qBAAD,CADC;AAEdC,oBAAAA,iBAFc,GAEMjB,6BAAQC,IAAR,CAAa,mBAAb,EAAkCU,IAAI,CAACG,GAAvC,CAFN;AAGdJ,oBAAAA,kBAHc,GAGOV,6BAAQC,IAAR,CAAa,oBAAb,EAAmCU,IAAI,CAACG,GAAxC,CAHP;;AAIdI,oBAAAA,gBAJc,GAIK,SAAnBA,gBAAmB,GAA2B;AAAA,qGAAP,EAAO;AAAA,8CAAxBC,OAAwB;AAAA,0BAAxBA,OAAwB,6BAAd,EAAc;;AAClD,0BAAMC,EAAE,GAAGD,OAAO,CAAC,YAAD,CAAP,IAAyBA,OAAO,CAAC,YAAD,CAAhC,IAAkD,EAA7D;AACA,0BAAME,cAAc,GAAGN,MAAM,CAACK,EAAD,CAA7B;AACA,6BAAO;AACLE,wBAAAA,kBAAkB,EAAED,cAAc,CAACjB,IAD9B;AAELa,wBAAAA,iBAAiB,EAAEA,iBAAiB,IAAII,cAAc,CAACjB,IAFlD;AAGLM,wBAAAA,kBAAkB,EAAEA,kBAAkB,IACjClB,sBAAsB,CAAC+B,0BAAvB,CAAkDF,cAAc,CAACjB,IAAjE,CAJA;AAKLoB,wBAAAA,kBAAkB,EAAEH,cAAc,CAACI,KAAf,IAAwB;AALvC,uBAAP;AAOD,qBAdmB;;AAepBb,oBAAAA,QAAQ,CAACC,GAAT,GAAeK,gBAAgB,CAACP,IAAI,CAACG,GAAN,CAA/B;AACAH,oBAAAA,IAAI,CAACe,GAAL,CAASC,MAAT,CAAgB,mBAAhB,EAAqCf,QAAQ,CAACC,GAAT,CAAaH,kBAAlD,EAAsE;AAAEkB,sBAAAA,MAAM,EAAE,KAAV;AAAiBC,sBAAAA,QAAQ,EAAE;AAA3B,qBAAtE;AACD,mBAjBD,MAiBO;AACLjB,oBAAAA,QAAQ,CAACC,GAAT,GAAe;AACbS,sBAAAA,kBAAkB,EAAE,IADP;AAEbL,sBAAAA,iBAAiB,EAAE,IAFN;AAGbP,sBAAAA,kBAAkB,EAAE,CAHP;AAIbc,sBAAAA,kBAAkB,EAAE;AAJP,qBAAf;AAMD;;AACKM,kBAAAA,OAtF0C,mCAuF3CnB,IAvF2C,GAwF3CC,QAxF2C;;AAAA,uBA0F5CtB,gBAAgB,CAACyC,eA1F2B;AAAA;AAAA;AAAA;;AAAA;AAAA,kDA4FzCnB,QA5FyC;AAAA;AAAA,yBA6FnCtB,gBAAgB,CAACyC,eAAjB,CAAiCD,OAAjC,CA7FmC;;AAAA;AAAA;AA2F9ClB,kBAAAA,QA3F8C;;AAAA;AAgGhD,sBAAIoB,OAAO,CAACC,OAAZ,EAAqB;AACnBC,kDAAkBC,SAAlB,GAA8BvB,QAAQ,CAACC,GAAT,CAAaH,kBAA3C;AACD,mBAFD,MAEO;AACC0B,oBAAAA,cADD,GACkBC,OAAO,CAAC,iBAAD,CADzB;AAELD,oBAAAA,cAAc,CAACE,GAAf,CAAmB,oBAAnB,EAAyC1B,QAAQ,CAACC,GAAlD;AACD;;AArG+C,mDAuGzCD,QAvGyC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iDA0GhB2B,SA1GgB,EA0GL;AAC3C,YAAMC,KAAK,GAAG,qBAASnD,sBAAsB,CAACoD,YAAvB,IAAuCC,4BAAhD,CAAd;;AACA,YAAIF,KAAK,CAACD,SAAD,CAAT,EAAsB;AACpB,iBAAOC,KAAK,CAACD,SAAD,CAAL,CAAiBzC,YAAxB;AACD;;AACD,eAAO0C,KAAK,CAACG,OAAN,CAAc7C,YAArB;AACD;AAhHiD;AAAA;AAAA,wCAkHzB;AACvB,YAAIkC,OAAO,CAACC,OAAZ,EAAqB;AACnB,iBAAO3B,MAAM,CAACsC,UAAP,IACLC,QAAQ,CAACC,eAAT,CAAyBC,WADpB,IAELF,QAAQ,CAACG,IAAT,CAAcD,WAFhB;AAGD;;AACD,eAAO,CAAC,CAAR;AACD;AAzHiD;;AA2HlD,oCAAYE,KAAZ,EAAmB;AAAA;;AAAA;AACjB,gCAAMA,KAAN;AAEAzD,MAAAA,sBAAsB,CAACC,oBAAvB,GAA8C,EAA9C;AAHiB,UAITyD,MAJS,GAIE,MAAKD,KAJP,CAITC,MAJS;AAKjB,UAAMV,KAAK,GAAG,qBAASU,MAAT,CAAd;AAEAC,MAAAA,MAAM,CAACC,IAAP,CAAYZ,KAAZ,EAAmB9C,OAAnB,CAA2B,UAACU,IAAD,EAAU;AAAA,0BACEoC,KAAK,CAACpC,IAAD,CADP;AAAA,YAC3BiD,UAD2B,eAC3BA,UAD2B;AAAA,YACfvD,YADe,eACfA,YADe;AAEnC,YAAMF,OAAO,GAAG,iCAAgByD,UAAhB,EAA4B;AAC1CC,UAAAA,KAAK,EAAE9D,sBAAsB,CAAC+D,eAAvB;AADmC,SAA5B,CAAhB;AAGA/D,QAAAA,sBAAsB,CAACC,oBAAvB,CAA4C+D,IAA5C,CAAiD;AAC/CpD,UAAAA,IAAI,EAAJA,IAD+C;AAE/CR,UAAAA,OAAO,EAAPA,OAF+C;AAG/CE,UAAAA,YAAY,EAAZA;AAH+C,SAAjD;AAKD,OAVD;AAYA,YAAK2D,KAAL,GAAa;AACX5C,QAAAA,GAAG,EAAE;AADM,OAAb;AAnBiB;AAsBlB;;AAjJiD;AAAA;AAAA,0CAmJ9B;AAClB,aAAK6C,eAAL,GAAuB,wBAASlE,sBAAsB,CAACmE,QAAhC,EAA0C,GAA1C,CAAvB;AACArD,QAAAA,MAAM,CAACsD,gBAAP,CAAwB,QAAxB,EAAkC,KAAKF,eAAvC,EAAwD,KAAxD;AACApD,QAAAA,MAAM,CAACsD,gBAAP,CAAwB,cAAxB,EAAwCpE,sBAAsB,CAACqE,cAA/D,EAA+E,KAA/E;AAEArE,QAAAA,sBAAsB,CAACsE,kCAAvB;AACD;AAzJiD;AAAA;AAAA,6CA2J3B;AACrB,YAAI,KAAKJ,eAAT,EAA0B;AACxBpD,UAAAA,MAAM,CAACyD,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,eAA1C,EAA2D,KAA3D;AACD;AACF;AA/JiD;AAAA;AAAA,+BAiKzC;AACP,eAAO,gCAAC,gBAAD,gCAAsB,KAAKD,KAA3B,EAAsC,KAAKR,KAA3C,EAAP;AACD;AAnKiD;AAAA;AAAA,IACfe,kBAAMC,SADS,UAG3CxB,YAH2C,GAG5B,IAH4B,SA4B3CyB,SA5B2C,GA4B/B;AACjBhB,IAAAA,MAAM,EAAEiB,sBAAUC,KAAV,CAAgB;AACtBC,MAAAA,WAAW,EAAEF,sBAAUG,GADD;AAEtBC,MAAAA,oBAAoB,EAAEJ,sBAAUG;AAFV,KAAhB;AADS,GA5B+B,SAmC3CE,YAnC2C,GAmC5B;AACpBtB,IAAAA,MAAM,EAAE7D,sBAAsB,CAACoD,YAAvB,IAAuCC;AAD3B,GAnC4B;AAAA,CAA/C","sourcesContent":["/* global require */\n\nimport debounce from 'lodash.debounce';\nimport matchMediaQuery from 'matchmediaquery';\nimport PropTypes from 'prop-types';\nimport Cookies from 'isomorphic-cookie';\nimport React from 'react';\nimport { MediaQueryWrapper } from './components';\nimport { getMedia } from './media';\nimport { defaultConfig } from './default-config';\n\nexport const ReactResponsiveConnect = WrappedComponent =>\n  class ReactResponsiveNextHoc extends React.Component {\n\n    static customConfig = null;\n\n    static updateDeviceTypeByViewportSize() {\n      let detectedMedia = null;\n      ReactResponsiveNextHoc.mediaQueriesMatchers.forEach((mediaItem) => {\n        if (mediaItem.matcher.matches) {\n          if (!detectedMedia\n            || (detectedMedia && detectedMedia.defaultWidth < mediaItem.defaultWidth)) {\n            detectedMedia = mediaItem;\n          }\n        }\n      });\n      const previouslyDetectedMediaWidth = Cookies.load('detectedMediaWidth') || null;\n\n      Cookies.save('detectedMediaWidth', detectedMedia.defaultWidth, { secure: false });\n      Cookies.save('detectedMediaType', detectedMedia.type, { secure: false });\n\n      if (!previouslyDetectedMediaWidth) {\n        const initialWidth = Cookies.load('initialMediaWidth') || null;\n        if (initialWidth !== detectedMedia.defaultWidth) {\n          window.location.reload();\n        }\n      }\n    }\n\n    static propTypes = {\n      config: PropTypes.shape({\n        breakPoints: PropTypes.any,\n        devicesToBreakPoints: PropTypes.any,\n      }),\n    };\n\n    static defaultProps = {\n      config: ReactResponsiveConnect.customConfig || defaultConfig,\n    };\n\n    static onResize() {\n      ReactResponsiveNextHoc.updateDeviceTypeByViewportSize();\n    }\n\n    static onBeforeUnload() {\n      ReactResponsiveNextHoc.updateDeviceTypeByViewportSize();\n    }\n\n    static reloadPageIfIncorrectWidthDetected() {\n      const previouslyDetectedMediaWidth = Cookies.load('detectedMediaWidth') || null;\n      ReactResponsiveNextHoc.updateDeviceTypeByViewportSize();\n      const detectedMediaWidth = Cookies.load('detectedMediaWidth');\n      if (previouslyDetectedMediaWidth && (detectedMediaWidth !== previouslyDetectedMediaWidth)) {\n        window.location.reload();\n      }\n    }\n\n    static async getInitialProps(args = {}) {\n      let newProps = {\n        env: {},\n      };\n\n      if (args && args.req) {\n        const device = eval('require(\\'device\\')'); // it's not bundled to a browser js\n        const detectedMediaType = Cookies.load('detectedMediaType', args.req);\n        const detectedMediaWidth = Cookies.load('detectedMediaWidth', args.req);\n        const checkEnvironment = ({ headers = {} } = {}) => {\n          const ua = headers['user-agent'] || headers['User-Agent'] || '';\n          const detectedDevice = device(ua);\n          return {\n            userAgentMediaType: detectedDevice.type,\n            detectedMediaType: detectedMediaType || detectedDevice.type,\n            detectedMediaWidth: detectedMediaWidth\n              || ReactResponsiveNextHoc.getDefaultMediaWidthByType(detectedDevice.type),\n            detectedMediaModel: detectedDevice.model || null,\n          }\n        };\n        newProps.env = checkEnvironment(args.req);\n        args.res.cookie('initialMediaWidth', newProps.env.detectedMediaWidth, { maxAge: 60000, httpOnly: false });\n      } else {\n        newProps.env = {\n          userAgentMediaType: null,\n          detectedMediaType: null,\n          detectedMediaWidth: 0,\n          detectedMediaModel: null,\n        };\n      }\n      const newArgs = {\n        ...args,\n        ...newProps,\n      };\n      if (WrappedComponent.getInitialProps) {\n        newProps = {\n          ...newProps,\n          ...await WrappedComponent.getInitialProps(newArgs),\n        };\n      }\n      if (process.browser) {\n        MediaQueryWrapper.fakeWidth = newProps.env.detectedMediaWidth;\n      } else {\n        const contextService = require('request-context');\n        contextService.set('request:responsive', newProps.env);\n      }\n\n      return newProps;\n    }\n\n    static getDefaultMediaWidthByType(mediaType) {\n      const media = getMedia(ReactResponsiveConnect.customConfig || defaultConfig);\n      if (media[mediaType]) {\n        return media[mediaType].defaultWidth;\n      }\n      return media.desktop.defaultWidth;\n    }\n\n    static getBrowserWidth() {\n      if (process.browser) {\n        return window.innerWidth ||\n          document.documentElement.clientWidth ||\n          document.body.clientWidth;\n      }\n      return -1;\n    }\n\n    constructor(props) {\n      super(props);\n\n      ReactResponsiveNextHoc.mediaQueriesMatchers = [];\n      const { config } = this.props;\n      const media = getMedia(config);\n\n      Object.keys(media).forEach((type) => {\n        const { mediaQuery, defaultWidth } = media[type];\n        const matcher = matchMediaQuery(mediaQuery, {\n          width: ReactResponsiveNextHoc.getBrowserWidth(),\n        });\n        ReactResponsiveNextHoc.mediaQueriesMatchers.push({\n          type,\n          matcher,\n          defaultWidth,\n        })\n      });\n\n      this.state = {\n        env: {},\n      };\n    }\n\n    componentDidMount() {\n      this.onResizeHandler = debounce(ReactResponsiveNextHoc.onResize, 200);\n      window.addEventListener('resize', this.onResizeHandler, false);\n      window.addEventListener('beforeunload', ReactResponsiveNextHoc.onBeforeUnload, false);\n\n      ReactResponsiveNextHoc.reloadPageIfIncorrectWidthDetected()\n    }\n\n    componentWillUnmount() {\n      if (this.onResizeHandler) {\n        window.removeEventListener('resize', this.onResizeHandler, false);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.state} {...this.props} />;\n    }\n  };\n"],"file":"react-responsive-connect.js"}