{"version":3,"sources":["../src/media.js"],"names":["mediaQueryBuilder","TAG","createMediaFromBreakPoint","breakPoint","minWidth","Number","from","maxWidth","to","mediaQuery","defaultWidth","getMedia","config","breakPoints","devicesToBreakPoints","undefined","Error","media","forEach","type","deviceType"],"mappings":";;;AACA,SAASA,iBAAT,QAAkC,WAAlC;AACA,SAASC,GAAT,QAAoB,kBAApB;;AAEA,IAAMC,4BAA4B,SAA5BA,yBAA4B,CAACC,UAAD,EAAgB;AAChD,MAAMC,WAAW,CAAC,cAAaC,OAAOF,WAAWG,IAAlB,CAAb,CAAD,GAAyCH,WAAWG,IAApD,GAA2D,CAA5E;AACA,MAAMC,WAAW,CAAC,cAAaF,OAAOF,WAAWK,EAAlB,CAAb,CAAD,GAAuCL,WAAWK,EAAlD,2BAAjB;AACA,SAAO;AACLC,gBAAYT,kBAAkBG,WAAWG,IAA7B,EAAmCH,WAAWK,EAA9C,CADP;AAELJ,sBAFK;AAGLG,sBAHK;AAILG,kBAAcN;AAJT,GAAP;AAMD,CATD;;AAWA,OAAO,IAAMO,WAAW,SAAXA,QAAW,CAACC,MAAD,EAAY;AAAA,MAC1BC,WAD0B,GACYD,MADZ,CAC1BC,WAD0B;AAAA,MACbC,oBADa,GACYF,MADZ,CACbE,oBADa;AAElC,MAAID,gBAAgBE,SAApB,EAA+B,MAAM,IAAIC,KAAJ,WAAaf,GAAb,2DAAN;AAC/B,MAAIa,yBAAyBC,SAA7B,EAAwC,MAAM,IAAIC,KAAJ,WAAaf,GAAb,oEAAN;AAExC,MAAMgB,QAAQ,EAAd;;AAEA,eAAYJ,WAAZ,EAAyBK,OAAzB,CAAiC,UAACC,IAAD,EAAU;AACzCF,UAAME,IAAN,IAAcjB,0BAA0BW,YAAYM,IAAZ,CAA1B,CAAd;AACD,GAFD;;AAGA,eAAYL,oBAAZ,EAAkCI,OAAlC,CAA0C,UAACE,UAAD,EAAgB;AACxD,QAAIH,MAAMG,UAAN,CAAJ,EAAuB,MAAM,IAAIJ,KAAJ,WAAaf,GAAb,cAAoBmB,UAApB,4CAAN;AACvB,QAAI,CAACH,MAAMH,qBAAqBM,UAArB,CAAN,CAAL,EAA8C,MAAM,IAAIJ,KAAJ,WAAaf,GAAb,yBAA+Ba,qBAAqBM,UAArB,CAA/B,mBAAwEA,UAAxE,2CAAN;AAC9CH,UAAMG,UAAN,IAAoBH,MAAMH,qBAAqBM,UAArB,CAAN,CAApB;AACD,GAJD;;AAKA,SAAOH,KAAP;AACD,CAhBM","sourcesContent":["// Must be correlated with devices-sizes entries !\nimport { mediaQueryBuilder } from './helpers';\nimport { TAG } from './default-config';\n\nconst createMediaFromBreakPoint = (breakPoint) => {\n  const minWidth = !Number.isNaN(Number(breakPoint.from)) ? breakPoint.from : 1;\n  const maxWidth = !Number.isNaN(Number(breakPoint.to)) ? breakPoint.to : Number.MAX_SAFE_INTEGER;\n  return {\n    mediaQuery: mediaQueryBuilder(breakPoint.from, breakPoint.to),\n    minWidth,\n    maxWidth,\n    defaultWidth: minWidth,\n  };\n};\n\nexport const getMedia = (config) => {\n  const { breakPoints, devicesToBreakPoints } = config;\n  if (breakPoints === undefined) throw new Error(`${TAG} No breakPoints entry in react-responsive-next config`);\n  if (devicesToBreakPoints === undefined) throw new Error(`${TAG} No devicesToBreakPoints entry in react-responsive-next config`);\n\n  const media = {};\n\n  Object.keys(breakPoints).forEach((type) => {\n    media[type] = createMediaFromBreakPoint(breakPoints[type]);\n  });\n  Object.keys(devicesToBreakPoints).forEach((deviceType) => {\n    if (media[deviceType]) throw new Error(`${TAG} ${deviceType} already defined in config.breakPoints`);\n    if (!media[devicesToBreakPoints[deviceType]]) throw new Error(`${TAG} Breakpoint ${devicesToBreakPoints[deviceType]} from ${deviceType} doesn't exists in config.breakPoints`);\n    media[deviceType] = media[devicesToBreakPoints[deviceType]];\n  });\n  return media;\n};\n"],"file":"media.js"}