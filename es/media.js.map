{"version":3,"sources":["../src/media.js"],"names":["mediaQueryBuilder","TAG","createMediaFromBreakPoint","breakPoint","minWidth","Number","isNaN","from","maxWidth","to","MAX_SAFE_INTEGER","mediaQuery","defaultWidth","getMedia","config","breakPoints","devicesToBreakPoints","undefined","Error","media","Object","keys","forEach","type","deviceType"],"mappings":"AACA,SAASA,iBAAT,QAAkC,WAAlC;AACA,SAASC,GAAT,QAAoB,kBAApB;;AAEA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,UAAD,EAAgB;AAChD,MAAMC,QAAQ,GAAG,CAACC,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,UAAU,CAACI,IAAZ,CAAnB,CAAD,GAAyCJ,UAAU,CAACI,IAApD,GAA2D,CAA5E;AACA,MAAMC,QAAQ,GAAG,CAACH,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,UAAU,CAACM,EAAZ,CAAnB,CAAD,GAAuCN,UAAU,CAACM,EAAlD,GAAuDJ,MAAM,CAACK,gBAA/E;AACA,SAAO;AACLC,IAAAA,UAAU,EAAEX,iBAAiB,CAACG,UAAU,CAACI,IAAZ,EAAkBJ,UAAU,CAACM,EAA7B,CADxB;AAELL,IAAAA,QAAQ,EAARA,QAFK;AAGLI,IAAAA,QAAQ,EAARA,QAHK;AAILI,IAAAA,YAAY,EAAER;AAJT,GAAP;AAMD,CATD;;AAWA,OAAO,IAAMS,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAY;AAAA,MAC1BC,WAD0B,GACYD,MADZ,CAC1BC,WAD0B;AAAA,MACbC,oBADa,GACYF,MADZ,CACbE,oBADa;AAElC,MAAID,WAAW,KAAKE,SAApB,EAA+B,MAAM,IAAIC,KAAJ,WAAajB,GAAb,2DAAN;AAC/B,MAAIe,oBAAoB,KAAKC,SAA7B,EAAwC,MAAM,IAAIC,KAAJ,WAAajB,GAAb,oEAAN;AAExC,MAAMkB,KAAK,GAAG,EAAd;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYN,WAAZ,EAAyBO,OAAzB,CAAiC,UAACC,IAAD,EAAU;AACzCJ,IAAAA,KAAK,CAACI,IAAD,CAAL,GAAcrB,yBAAyB,CAACa,WAAW,CAACQ,IAAD,CAAZ,CAAvC;AACD,GAFD;AAGAH,EAAAA,MAAM,CAACC,IAAP,CAAYL,oBAAZ,EAAkCM,OAAlC,CAA0C,UAACE,UAAD,EAAgB;AACxD,QAAIL,KAAK,CAACK,UAAD,CAAT,EAAuB,MAAM,IAAIN,KAAJ,WAAajB,GAAb,cAAoBuB,UAApB,4CAAN;AACvB,QAAI,CAACL,KAAK,CAACH,oBAAoB,CAACQ,UAAD,CAArB,CAAV,EAA8C,MAAM,IAAIN,KAAJ,WAAajB,GAAb,yBAA+Be,oBAAoB,CAACQ,UAAD,CAAnD,mBAAwEA,UAAxE,2CAAN;AAC9CL,IAAAA,KAAK,CAACK,UAAD,CAAL,GAAoBL,KAAK,CAACH,oBAAoB,CAACQ,UAAD,CAArB,CAAzB;AACD,GAJD;AAKA,SAAOL,KAAP;AACD,CAhBM","sourcesContent":["// Must be correlated with devices-sizes entries !\nimport { mediaQueryBuilder } from './helpers';\nimport { TAG } from './default-config';\n\nconst createMediaFromBreakPoint = (breakPoint) => {\n  const minWidth = !Number.isNaN(Number(breakPoint.from)) ? breakPoint.from : 1;\n  const maxWidth = !Number.isNaN(Number(breakPoint.to)) ? breakPoint.to : Number.MAX_SAFE_INTEGER;\n  return {\n    mediaQuery: mediaQueryBuilder(breakPoint.from, breakPoint.to),\n    minWidth,\n    maxWidth,\n    defaultWidth: minWidth,\n  };\n};\n\nexport const getMedia = (config) => {\n  const { breakPoints, devicesToBreakPoints } = config;\n  if (breakPoints === undefined) throw new Error(`${TAG} No breakPoints entry in react-responsive-next config`);\n  if (devicesToBreakPoints === undefined) throw new Error(`${TAG} No devicesToBreakPoints entry in react-responsive-next config`);\n\n  const media = {};\n\n  Object.keys(breakPoints).forEach((type) => {\n    media[type] = createMediaFromBreakPoint(breakPoints[type]);\n  });\n  Object.keys(devicesToBreakPoints).forEach((deviceType) => {\n    if (media[deviceType]) throw new Error(`${TAG} ${deviceType} already defined in config.breakPoints`);\n    if (!media[devicesToBreakPoints[deviceType]]) throw new Error(`${TAG} Breakpoint ${devicesToBreakPoints[deviceType]} from ${deviceType} doesn't exists in config.breakPoints`);\n    media[deviceType] = media[devicesToBreakPoints[deviceType]];\n  });\n  return media;\n};\n"],"file":"media.js"}