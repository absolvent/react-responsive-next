{"version":3,"sources":["../src/components.js"],"names":["React","PropTypes","MediaQuery","isNaN","defaultConfig","TAG","ReactResponsiveConnect","getMedia","getMediaMinWidthByType","getMediaMaxWidthByType","mediaQueryBuilder","isStringOrNumber","isString","MediaQueryWrapper","props","values","deviceWidth","width","children","isInvertMatch","other","process","browser","fakeWidth","contextService","require","get","matches","propTypes","oneOfType","node","func","component","string","dispatch","isRequired","number","bool","defaultProps","responsiveWrapper","p","generateShowHideComponent","isHideComponent","media","customConfig","on","from","to","fromValue","Number","toValue","query","mediaQuery","Error","undefined","Show","displayName","Hide","defaultMedia","PhoneScreen","phone","TabletScreen","tablet","DesktopAndUpScreen","desktop","PhoneAndTabletScreen","maxWidth","TabletAndUpScreen","minWidth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport MediaQuery from 'react-responsive'\nimport isNaN from 'lodash/isNaN';\nimport { defaultConfig, TAG } from './default-config'\nimport { ReactResponsiveConnect } from './react-responsive-connect';\nimport { getMedia } from './media'\nimport { getMediaMinWidthByType, getMediaMaxWidthByType, mediaQueryBuilder, isStringOrNumber, isString } from './helpers'\n\nexport const MediaQueryWrapper = (props = {}) => {\n  // eslint-disable-next-line no-unused-vars\n  const values = { deviceWidth: 1, width: 1 };\n  const { children, isInvertMatch,  ...other } = props;\n\n  if (process.browser) {\n    values.deviceWidth = MediaQueryWrapper.fakeWidth;\n    values.width = MediaQueryWrapper.fakeWidth;\n  } else {\n    const contextService = require('request-context');\n    const width = contextService.get('request:responsive.detectedMediaWidth');\n    values.deviceWidth = width;\n    values.width = width;\n  }\n\n  return (\n    <MediaQuery {...other} {...{ values }} >\n      {(matches) => {\n        if (matches) {\n          return isInvertMatch ? null : children;\n        }\n        return isInvertMatch ? children : null;\n      }}\n    </MediaQuery>\n  )\n};\n\nMediaQueryWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.string]),\n  dispatch: PropTypes.func.isRequired,\n  fakeWidth: PropTypes.number.isRequired,\n  isInvertMatch: PropTypes.bool,\n};\n\nMediaQueryWrapper.defaultProps = {\n  isInvertMatch: false,\n};\n\nMediaQueryWrapper.defaultProps = {\n  children: null,\n  component: 'div',\n};\n\nexport const responsiveWrapper = (props = {}) => (p => MediaQueryWrapper({ ...props, ...p }));\n\nconst generateShowHideComponent = isHideComponent => (props) => {\n  const media = getMedia(ReactResponsiveConnect.customConfig || defaultConfig);\n  const {\n    on,\n    from,\n    to,\n    children,\n  } = props;\n  const fromValue = isNaN(Number(from)) ? getMediaMinWidthByType(from, media) : from;\n  const toValue = isNaN(Number(to)) ? getMediaMaxWidthByType(to, media) : to;\n\n  if (on) {\n    if (media[on]) {\n      return MediaQueryWrapper({\n        query: media[on].mediaQuery,\n        isInvertMatch: isHideComponent,\n        children,\n      });\n    }\n    throw new Error(`${TAG} No ${on} definition in media configuration`);\n  }\n\n  if (from !== undefined && to !== undefined) {\n    return MediaQueryWrapper({\n      query: mediaQueryBuilder(fromValue, toValue),\n      isInvertMatch: isHideComponent,\n      children,\n    });\n  } else if (from !== undefined) {\n    return MediaQueryWrapper({\n      query: mediaQueryBuilder(fromValue, undefined),\n      isInvertMatch: isHideComponent,\n      children,\n    });\n  } else if (to !== undefined) {\n    return MediaQueryWrapper({\n      query: mediaQueryBuilder(undefined, toValue),\n      isInvertMatch: isHideComponent,\n      children,\n    });\n  }\n  return null;\n};\n\nconst propTypes = {\n  from: (props) => {\n    const { on, from } = props;\n    if (from !== undefined && !isStringOrNumber(from)) {\n      return new Error(`${TAG} Improper value type of the 'from' prop (${from}), only a String or a Number`);\n    } else if (from && on) {\n      return new Error(`${TAG} Used excluding props from and on`);\n    }\n    return null\n  },\n  on: (props) => {\n    const { on, from, to } = props;\n    if (on && !isString(on)) {\n      return new Error(`${TAG} Improper value type of the 'on' prop (${on}), only a String`);\n    } else if (on && (from || to)) {\n      return new Error(`${TAG} Used excluding props for and from or to!`);\n    }\n    return null;\n  },\n  to: ({ on, to }) => {\n    if (to !== undefined && !isStringOrNumber(to)) {\n      return new Error(`${TAG} Improper value type of the 'to' prop (${to}), only a String or a Number`);\n    } else if (to && on) {\n      return new Error(`${TAG} Used excluding props from and on`);\n    }\n    return null;\n  },\n};\n\nexport const Show = generateShowHideComponent(false);\nShow.propTypes = propTypes;\nShow.displayName = 'Show';\n\nexport const Hide = generateShowHideComponent(true);\nHide.propTypes = propTypes;\nHide.displayName = 'Hide';\n\n\n// Legacy for versions < 0.8.0\n// WARNING: Works only with the default config\nconst defaultMedia = getMedia(defaultConfig);\nexport const PhoneScreen = responsiveWrapper({ query: defaultMedia.phone.mediaQuery });\nPhoneScreen.displayName = 'PhoneScreen';\nexport const TabletScreen = responsiveWrapper({ query: defaultMedia.tablet.mediaQuery });\nTabletScreen.displayName = 'TabletScreen';\nexport const DesktopAndUpScreen = responsiveWrapper({ query: defaultMedia.desktop.mediaQuery });\nDesktopAndUpScreen.displayName = 'DesktopAndUpScreen';\nexport const PhoneAndTabletScreen = responsiveWrapper({ query: `(max-width: ${defaultMedia.tablet.maxWidth}px)` });\nPhoneAndTabletScreen.displayName = 'PhoneAndTabletScreen';\nexport const TabletAndUpScreen = responsiveWrapper({ query: `(min-width: ${defaultMedia.tablet.minWidth}px)` });\nTabletAndUpScreen.displayName = 'TabletAndUpScreen';\n"],"file":"components.js"}