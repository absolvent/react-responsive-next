{"version":3,"sources":["../src/components.js"],"names":["React","PropTypes","MediaQuery","connect","breakPoints","MediaQueryWrapper","props","dispatch","fakeWidth","children","other","values","deviceWidth","width","propTypes","oneOfType","node","func","component","string","isRequired","number","defaultProps","responsiveWrapper","state","responsive","XsScreen","maxWidth","sm","SmScreen","query","md","MdScreen","lg","LgScreen","XsScreenHidden","minWidth","SmScreenHidden","MdScreenHidden","LgScreenHidden","PhoneScreen","TabletScreen","DesktopScreen","MobileScreen","PhoneScreenHidden","TabletScreenHidden","DesktopScreenHidden","MobileScreenHidden"],"mappings":"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","file":"components.js","sourcesContent":["// see also components/ScreenSize for another way to consume this data\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport MediaQuery from 'react-responsive'\nimport { connect } from 'react-redux'\nimport { breakPoints } from './defaults'\n\nexport const MediaQueryWrapper = (props = {}) => {\n  // eslint-disable-next-line no-unused-vars\n  const {\n    dispatch, fakeWidth, children, ...other\n  } = props;\n  const values = { deviceWidth: MediaQuery.fakeWidth, width: MediaQuery.fakeWidth };\n  return (\n    <MediaQuery {...other} {...{ values }} >\n      {children}\n    </MediaQuery>\n  )\n}\n\nMediaQuery.fakeWidth = null;\n\nMediaQueryWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.string]),\n  dispatch: PropTypes.func.isRequired,\n  fakeWidth: PropTypes.number.isRequired,\n};\n\nMediaQueryWrapper.defaultProps = {\n  children: null,\n  component: 'div',\n}\n\nexport const responsiveWrapper = (props = {}) =>\n  connect(state => ({ fakeWidth: state.responsive.fakeWidth, ...props }))(MediaQueryWrapper)\n\nexport const XsScreen = responsiveWrapper({ maxWidth: breakPoints.sm - 1 })\nexport const SmScreen = responsiveWrapper({ query: `(min-width: ${breakPoints.sm}px) and (max-width: ${breakPoints.md - 1}px)` })\nexport const MdScreen = responsiveWrapper({ query: `(min-width: ${breakPoints.md}px) and (max-width: ${breakPoints.lg - 1}px)` })\nexport const LgScreen = responsiveWrapper({ query: `(min-width: ${breakPoints.lg}px)` })\n\nexport const XsScreenHidden = responsiveWrapper({ minWidth: breakPoints.sm })\nexport const SmScreenHidden = responsiveWrapper({ query: `(max-width: ${breakPoints.sm - 1}px), (min-width: ${breakPoints.md}px)` })\nexport const MdScreenHidden = responsiveWrapper({ query: `(max-width: ${breakPoints.md - 1}px), (min-width: ${breakPoints.lg}px)` })\nexport const LgScreenHidden = responsiveWrapper({ maxWidth: breakPoints.lg - 1 })\n\nexport { XsScreen as PhoneScreen }\nexport { SmScreen as TabletScreen }\nexport const DesktopScreen = responsiveWrapper({ minWidth: breakPoints.md })\nexport const MobileScreen = responsiveWrapper({ maxWidth: breakPoints.md - 1 })\n\nexport { XsScreenHidden as PhoneScreenHidden }\nexport { SmScreenHidden as TabletScreenHidden }\nexport { MobileScreen as DesktopScreenHidden }\nexport { DesktopScreen as MobileScreenHidden }\n"]}