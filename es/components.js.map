{"version":3,"sources":["../src/components.js"],"names":["React","PropTypes","MediaQuery","breakPoints","MediaQueryWrapper","props","children","other","values","deviceWidth","fakeWidth","width","propTypes","oneOfType","node","func","component","string","dispatch","isRequired","number","defaultProps","responsiveWrapper","TestScreen","query","XsScreen","maxWidth","sm","SmScreen","md","MdScreen","lg","LgScreen","XsScreenHidden","minWidth","SmScreenHidden","MdScreenHidden","LgScreenHidden","PhoneScreen","TabletScreen","DesktopScreen","MobileScreen","PhoneScreenHidden","TabletScreenHidden","DesktopScreenHidden","MobileScreenHidden"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEO,IAAMC,oBAAoB,SAApBA,iBAAoB,GAAgB;AAAA,MAAfC,KAAe,uEAAP,EAAO;;AAAA,MAEvCC,QAFuC,GAEhBD,KAFgB,CAEvCC,QAFuC;AAAA,MAE1BC,KAF0B,4BAEhBF,KAFgB;;AAG/C,MAAMG,SAAS;AAAEC,iBAAaP,WAAWQ,SAA1B;AAAqCC,WAAOT,WAAWQ;AAAvD,GAAf;AACA,SACE,oBAAC,UAAD,eAAgBH,KAAhB,EAA2B;AAAEC;AAAF,GAA3B,GACGF,QADH,CADF;AAKD,CATM;;;AAWPJ,WAAWQ,SAAX,GAAuB,CAAvB;AAEAN,kBAAkBQ,SAAlB,GAA8B;AAC5BN,YAAUL,UAAUY,SAAV,CAAoB,CAACZ,UAAUa,IAAX,EAAiBb,UAAUc,IAA3B,CAApB,CADkB;AAE5BC,aAAWf,UAAUY,SAAV,CAAoB,CAACZ,UAAUa,IAAX,EAAiBb,UAAUc,IAA3B,EAAiCd,UAAUgB,MAA3C,CAApB,CAFiB;AAG5BC,YAAUjB,UAAUc,IAAV,CAAeI,UAHG;AAI5BT,aAAWT,UAAUmB,MAAV,CAAiBD;AAJA,CAA9B;AAOAf,kBAAkBiB,YAAlB,GAAiC;AAC/Bf,YAAU,IADqB;AAE/BU,aAAW;AAFoB,CAAjC;AAKA,OAAO,IAAMM,oBAAoBlB,iBAA1B;AAEP,OAAO,IAAMmB,aAAanB,kBAAkB;AAAEoB,SAAO;AAAT,CAAlB,CAAnB;AACP,OAAO,IAAMC,WAAWH,kBAAkB;AAAEI,YAAUvB,YAAYwB,EAAZ,GAAiB;AAA7B,CAAlB,CAAjB;AACP,OAAO,IAAMC,WAAWN,kBAAkB;AAAEE,+BAAsBrB,YAAYwB,EAAlC,iCAA2DxB,YAAY0B,EAAZ,GAAiB,CAA5E;AAAF,CAAlB,CAAjB;AACP,OAAO,IAAMC,WAAWR,kBAAkB;AAAEE,+BAAsBrB,YAAY0B,EAAlC,iCAA2D1B,YAAY4B,EAAZ,GAAiB,CAA5E;AAAF,CAAlB,CAAjB;AACP,OAAO,IAAMC,WAAWV,kBAAkB;AAAEE,+BAAsBrB,YAAY4B,EAAlC;AAAF,CAAlB,CAAjB;AAEP,OAAO,IAAME,iBAAiBX,kBAAkB;AAAEY,YAAU/B,YAAYwB;AAAxB,CAAlB,CAAvB;AACP,OAAO,IAAMQ,iBAAiBb,kBAAkB;AAAEE,+BAAsBrB,YAAYwB,EAAZ,GAAiB,CAAvC,8BAA4DxB,YAAY0B,EAAxE;AAAF,CAAlB,CAAvB;AACP,OAAO,IAAMO,iBAAiBd,kBAAkB;AAAEE,+BAAsBrB,YAAY0B,EAAZ,GAAiB,CAAvC,8BAA4D1B,YAAY4B,EAAxE;AAAF,CAAlB,CAAvB;AACP,OAAO,IAAMM,iBAAiBf,kBAAkB;AAAEI,YAAUvB,YAAY4B,EAAZ,GAAiB;AAA7B,CAAlB,CAAvB;AAEP,SAASN,YAAYa,WAArB;AACA,SAASV,YAAYW,YAArB;AACA,OAAO,IAAMC,gBAAgBlB,kBAAkB;AAAEY,YAAU/B,YAAY0B;AAAxB,CAAlB,CAAtB;AACP,OAAO,IAAMY,eAAenB,kBAAkB;AAAEI,YAAUvB,YAAY0B,EAAZ,GAAiB;AAA7B,CAAlB,CAArB;AAEP,SAASI,kBAAkBS,iBAA3B;AACA,SAASP,kBAAkBQ,kBAA3B;AACA,SAASF,gBAAgBG,mBAAzB;AACA,SAASJ,iBAAiBK,kBAA1B","file":"components.js","sourcesContent":["// see also components/ScreenSize for another way to consume this data\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport MediaQuery from 'react-responsive'\nimport { breakPoints } from './defaults'\n\nexport const MediaQueryWrapper = (props = {}) => {\n  // eslint-disable-next-line no-unused-vars\n  const { children, ...other } = props;\n  const values = { deviceWidth: MediaQuery.fakeWidth, width: MediaQuery.fakeWidth };\n  return (\n    <MediaQuery {...other} {...{ values }} >\n      {children}\n    </MediaQuery>\n  )\n}\n\nMediaQuery.fakeWidth = 0;\n\nMediaQueryWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.string]),\n  dispatch: PropTypes.func.isRequired,\n  fakeWidth: PropTypes.number.isRequired,\n};\n\nMediaQueryWrapper.defaultProps = {\n  children: null,\n  component: 'div',\n};\n\nexport const responsiveWrapper = MediaQueryWrapper;\n\nexport const TestScreen = MediaQueryWrapper({ query: '(max-width: 1224px)' });\nexport const XsScreen = responsiveWrapper({ maxWidth: breakPoints.sm - 1 })\nexport const SmScreen = responsiveWrapper({ query: `(min-width: ${breakPoints.sm}px) and (max-width: ${breakPoints.md - 1}px)` })\nexport const MdScreen = responsiveWrapper({ query: `(min-width: ${breakPoints.md}px) and (max-width: ${breakPoints.lg - 1}px)` })\nexport const LgScreen = responsiveWrapper({ query: `(min-width: ${breakPoints.lg}px)` })\n\nexport const XsScreenHidden = responsiveWrapper({ minWidth: breakPoints.sm })\nexport const SmScreenHidden = responsiveWrapper({ query: `(max-width: ${breakPoints.sm - 1}px), (min-width: ${breakPoints.md}px)` })\nexport const MdScreenHidden = responsiveWrapper({ query: `(max-width: ${breakPoints.md - 1}px), (min-width: ${breakPoints.lg}px)` })\nexport const LgScreenHidden = responsiveWrapper({ maxWidth: breakPoints.lg - 1 })\n\nexport { XsScreen as PhoneScreen }\nexport { SmScreen as TabletScreen }\nexport const DesktopScreen = responsiveWrapper({ minWidth: breakPoints.md })\nexport const MobileScreen = responsiveWrapper({ maxWidth: breakPoints.md - 1 })\n\nexport { XsScreenHidden as PhoneScreenHidden }\nexport { SmScreenHidden as TabletScreenHidden }\nexport { MobileScreen as DesktopScreenHidden }\nexport { DesktopScreen as MobileScreenHidden }\n"]}