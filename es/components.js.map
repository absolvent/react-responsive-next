{"version":3,"sources":["../src/components.js"],"names":["React","PropTypes","MediaQuery","breakPoints","getMedia","MediaQueryWrapper","props","children","other","values","deviceWidth","fakeWidth","width","propTypes","oneOfType","node","func","component","string","dispatch","isRequired","number","defaultProps","responsiveWrapper","p","media","PhoneScreen","query","phone","mediaQuery","TabletScreen","tablet","DesktopScreen","desktop","PhoneTabletScreen","TabletDesktopScreen"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,QAAT,QAAyB,SAAzB;;AAEO,IAAMC,oBAAoB,SAApBA,iBAAoB,GAAgB;AAAA,MAAfC,KAAe,uEAAP,EAAO;;AAAA,MAEvCC,QAFuC,GAEhBD,KAFgB,CAEvCC,QAFuC;AAAA,MAE1BC,KAF0B,4BAEhBF,KAFgB;;AAG/C,MAAMG,SAAS;AAAEC,iBAAaL,kBAAkBM,SAAjC;AAA4CC,WAAOP,kBAAkBM;AAArE,GAAf;AACA,SACE,oBAAC,UAAD,eAAgBH,KAAhB,EAA2B;AAAEC;AAAF,GAA3B,GACGF,QADH,CADF;AAKD,CATM;;;AAWPF,kBAAkBQ,SAAlB,GAA8B;AAC5BN,YAAUN,UAAUa,SAAV,CAAoB,CAACb,UAAUc,IAAX,EAAiBd,UAAUe,IAA3B,CAApB,CADkB;AAE5BC,aAAWhB,UAAUa,SAAV,CAAoB,CAACb,UAAUc,IAAX,EAAiBd,UAAUe,IAA3B,EAAiCf,UAAUiB,MAA3C,CAApB,CAFiB;AAG5BC,YAAUlB,UAAUe,IAAV,CAAeI,UAHG;AAI5BT,aAAWV,UAAUoB,MAAV,CAAiBD;AAJA,CAA9B;AAOAf,kBAAkBiB,YAAlB,GAAiC;AAC/Bf,YAAU,IADqB;AAE/BU,aAAW;AAFoB,CAAjC;AAKA,OAAO,IAAMM,oBAAoB,SAApBA,iBAAoB;AAAA,MAACjB,KAAD,uEAAS,EAAT;AAAA,SAAiB;AAAA,WAAKD,+BAAuBC,KAAvB,EAAiCkB,CAAjC,EAAL;AAAA,GAAjB;AAAA,CAA1B;AAEP,IAAMC,QAAQrB,SAASD,WAAT,CAAd;AAEA,OAAO,IAAMuB,cAAcH,kBAAkB;AAAEI,SAAOF,MAAMG,KAAN,CAAYC;AAArB,CAAlB,CAApB;AACP,OAAO,IAAMC,eAAeP,kBAAkB;AAAEI,SAAOF,MAAMM,MAAN,CAAaF;AAAtB,CAAlB,CAArB;AACP,OAAO,IAAMG,gBAAgBT,kBAAkB;AAAEI,SAAOF,MAAMQ,OAAN,CAAcJ;AAAvB,CAAlB,CAAtB;AACP,OAAO,IAAMK,oBAAoBX,kBAAkB;AAAEI,+BAAsBxB,YAAY8B,OAAZ,GAAsB,CAA5C;AAAF,CAAlB,CAA1B;AACP,OAAO,IAAME,sBAAsBZ,kBAAkB;AAAEI,+BAAsBxB,YAAY4B,MAAlC;AAAF,CAAlB,CAA5B","file":"components.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport MediaQuery from 'react-responsive'\nimport { breakPoints } from './defaults'\nimport { getMedia } from './media'\n\nexport const MediaQueryWrapper = (props = {}) => {\n  // eslint-disable-next-line no-unused-vars\n  const { children, ...other } = props;\n  const values = { deviceWidth: MediaQueryWrapper.fakeWidth, width: MediaQueryWrapper.fakeWidth };\n  return (\n    <MediaQuery {...other} {...{ values }} >\n      {children}\n    </MediaQuery>\n  )\n};\n\nMediaQueryWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.string]),\n  dispatch: PropTypes.func.isRequired,\n  fakeWidth: PropTypes.number.isRequired,\n};\n\nMediaQueryWrapper.defaultProps = {\n  children: null,\n  component: 'div',\n};\n\nexport const responsiveWrapper = (props = {}) => (p => MediaQueryWrapper({ ...props, ...p }));\n\nconst media = getMedia(breakPoints);\n\nexport const PhoneScreen = responsiveWrapper({ query: media.phone.mediaQuery });\nexport const TabletScreen = responsiveWrapper({ query: media.tablet.mediaQuery });\nexport const DesktopScreen = responsiveWrapper({ query: media.desktop.mediaQuery });\nexport const PhoneTabletScreen = responsiveWrapper({ query: `(max-width: ${breakPoints.desktop - 1}px)` });\nexport const TabletDesktopScreen = responsiveWrapper({ query: `(min-width: ${breakPoints.tablet}px)` });\n"]}