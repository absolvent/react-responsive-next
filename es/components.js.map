{"version":3,"sources":["../src/components.js"],"names":["React","PropTypes","MediaQuery","isNaN","defaultConfig","TAG","ReactResponsiveConnect","getMedia","getMediaMinWidthByType","getMediaMaxWidthByType","mediaQueryBuilder","isStringOrNumber","isString","MediaQueryWrapper","props","children","isInvertMatch","other","values","deviceWidth","fakeWidth","width","matches","propTypes","oneOfType","node","func","component","string","dispatch","isRequired","number","bool","defaultProps","responsiveWrapper","p","generateShowHideComponent","media","customConfig","on","from","to","fromValue","Number","toValue","query","mediaQuery","isHideComponent","Error","undefined","Show","displayName","Hide","defaultMedia","PhoneScreen","phone","TabletScreen","tablet","DesktopAndUpScreen","desktop","PhoneAndTabletScreen","maxWidth","TabletAndUpScreen","minWidth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,aAAT,EAAwBC,GAAxB,QAAmC,kBAAnC;AACA,SAASC,sBAAT,QAAuC,4BAAvC;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,EAAyDC,iBAAzD,EAA4EC,gBAA5E,EAA8FC,QAA9F,QAA8G,WAA9G;;AAEO,IAAMC,oBAAoB,SAApBA,iBAAoB,GAAgB;AAAA,MAAfC,KAAe,uEAAP,EAAO;;AAAA,MAEvCC,QAFuC,GAEAD,KAFA,CAEvCC,QAFuC;AAAA,MAE7BC,aAF6B,GAEAF,KAFA,CAE7BE,aAF6B;AAAA,MAEVC,KAFU,4BAEAH,KAFA;;AAG/C,MAAMI,SAAS;AAAEC,iBAAaN,kBAAkBO,SAAjC;AAA4CC,WAAOR,kBAAkBO;AAArE,GAAf;AACA,SACE,oBAAC,UAAD,eAAgBH,KAAhB,EAA2B;AAAEC;AAAF,GAA3B,GACG,UAACI,OAAD,EAAa;AACZ,QAAIA,OAAJ,EAAa;AACX,aAAON,gBAAgB,IAAhB,GAAuBD,QAA9B;AACD;;AACD,WAAOC,gBAAgBD,QAAhB,GAA2B,IAAlC;AACD,GANH,CADF;AAUD,CAdM;;;AAgBPF,kBAAkBU,SAAlB,GAA8B;AAC5BR,YAAUd,UAAUuB,SAAV,CAAoB,CAACvB,UAAUwB,IAAX,EAAiBxB,UAAUyB,IAA3B,CAApB,CADkB;AAE5BC,aAAW1B,UAAUuB,SAAV,CAAoB,CAACvB,UAAUwB,IAAX,EAAiBxB,UAAUyB,IAA3B,EAAiCzB,UAAU2B,MAA3C,CAApB,CAFiB;AAG5BC,YAAU5B,UAAUyB,IAAV,CAAeI,UAHG;AAI5BV,aAAWnB,UAAU8B,MAAV,CAAiBD,UAJA;AAK5Bd,iBAAef,UAAU+B;AALG,CAA9B;AAQAnB,kBAAkBoB,YAAlB,GAAiC;AAC/BjB,iBAAe;AADgB,CAAjC;AAIAH,kBAAkBoB,YAAlB,GAAiC;AAC/BlB,YAAU,IADqB;AAE/BY,aAAW;AAFoB,CAAjC;AAKA,OAAO,IAAMO,oBAAoB,SAApBA,iBAAoB;AAAA,MAACpB,KAAD,uEAAS,EAAT;AAAA,SAAiB;AAAA,WAAKD,+BAAuBC,KAAvB,EAAiCqB,CAAjC,EAAL;AAAA,GAAjB;AAAA,CAA1B;;AAEP,IAAMC,4BAA4B,SAA5BA,yBAA4B;AAAA,SAAmB,UAACtB,KAAD,EAAW;AAC9D,QAAMuB,QAAQ9B,SAASD,uBAAuBgC,YAAvB,IAAuClC,aAAhD,CAAd;AAD8D,QAG5DmC,EAH4D,GAO1DzB,KAP0D,CAG5DyB,EAH4D;AAAA,QAI5DC,IAJ4D,GAO1D1B,KAP0D,CAI5D0B,IAJ4D;AAAA,QAK5DC,EAL4D,GAO1D3B,KAP0D,CAK5D2B,EAL4D;AAAA,QAM5D1B,QAN4D,GAO1DD,KAP0D,CAM5DC,QAN4D;AAQ9D,QAAM2B,YAAYvC,MAAMwC,OAAOH,IAAP,CAAN,IAAsBhC,uBAAuBgC,IAAvB,EAA6BH,KAA7B,CAAtB,GAA4DG,IAA9E;AACA,QAAMI,UAAUzC,MAAMwC,OAAOF,EAAP,CAAN,IAAoBhC,uBAAuBgC,EAAvB,EAA2BJ,KAA3B,CAApB,GAAwDI,EAAxE;;AAEA,QAAIF,EAAJ,EAAQ;AACN,UAAIF,MAAME,EAAN,CAAJ,EAAe;AACb,eAAO1B,kBAAkB;AACvBgC,iBAAOR,MAAME,EAAN,EAAUO,UADM;AAEvB9B,yBAAe+B,eAFQ;AAGvBhC;AAHuB,SAAlB,CAAP;AAKD;;AACD,YAAM,IAAIiC,KAAJ,WAAa3C,GAAb,iBAAuBkC,EAAvB,wCAAN;AACD;;AAED,QAAIC,SAASS,SAAT,IAAsBR,OAAOQ,SAAjC,EAA4C;AAC1C,aAAOpC,kBAAkB;AACvBgC,eAAOnC,kBAAkBgC,SAAlB,EAA6BE,OAA7B,CADgB;AAEvB5B,uBAAe+B,eAFQ;AAGvBhC;AAHuB,OAAlB,CAAP;AAKD,KAND,MAMO,IAAIyB,SAASS,SAAb,EAAwB;AAC7B,aAAOpC,kBAAkB;AACvBgC,eAAOnC,kBAAkBgC,SAAlB,EAA6BO,SAA7B,CADgB;AAEvBjC,uBAAe+B,eAFQ;AAGvBhC;AAHuB,OAAlB,CAAP;AAKD,KANM,MAMA,IAAI0B,OAAOQ,SAAX,EAAsB;AAC3B,aAAOpC,kBAAkB;AACvBgC,eAAOnC,kBAAkBuC,SAAlB,EAA6BL,OAA7B,CADgB;AAEvB5B,uBAAe+B,eAFQ;AAGvBhC;AAHuB,OAAlB,CAAP;AAKD;;AACD,WAAO,IAAP;AACD,GA1CiC;AAAA,CAAlC;;AA4CA,IAAMQ,YAAY;AAChBiB,QAAM,cAAC1B,KAAD,EAAW;AAAA,QACPyB,EADO,GACMzB,KADN,CACPyB,EADO;AAAA,QACHC,IADG,GACM1B,KADN,CACH0B,IADG;;AAEf,QAAIA,SAASS,SAAT,IAAsB,CAACtC,iBAAiB6B,IAAjB,CAA3B,EAAmD;AACjD,aAAO,IAAIQ,KAAJ,WAAa3C,GAAb,sDAA4DmC,IAA5D,kCAAP;AACD,KAFD,MAEO,IAAIA,QAAQD,EAAZ,EAAgB;AACrB,aAAO,IAAIS,KAAJ,WAAa3C,GAAb,uCAAP;AACD;;AACD,WAAO,IAAP;AACD,GATe;AAUhBkC,MAAI,YAACzB,KAAD,EAAW;AAAA,QACLyB,EADK,GACYzB,KADZ,CACLyB,EADK;AAAA,QACDC,IADC,GACY1B,KADZ,CACD0B,IADC;AAAA,QACKC,EADL,GACY3B,KADZ,CACK2B,EADL;;AAEb,QAAIF,MAAM,CAAC3B,SAAS2B,EAAT,CAAX,EAAyB;AACvB,aAAO,IAAIS,KAAJ,WAAa3C,GAAb,oDAA0DkC,EAA1D,sBAAP;AACD,KAFD,MAEO,IAAIA,OAAOC,QAAQC,EAAf,CAAJ,EAAwB;AAC7B,aAAO,IAAIO,KAAJ,WAAa3C,GAAb,+CAAP;AACD;;AACD,WAAO,IAAP;AACD,GAlBe;AAmBhBoC,MAAI,kBAAgB;AAAA,QAAbF,EAAa,QAAbA,EAAa;AAAA,QAATE,GAAS,QAATA,EAAS;;AAClB,QAAIA,QAAOQ,SAAP,IAAoB,CAACtC,iBAAiB8B,GAAjB,CAAzB,EAA+C;AAC7C,aAAO,IAAIO,KAAJ,WAAa3C,GAAb,oDAA0DoC,GAA1D,kCAAP;AACD,KAFD,MAEO,IAAIA,OAAMF,EAAV,EAAc;AACnB,aAAO,IAAIS,KAAJ,WAAa3C,GAAb,uCAAP;AACD;;AACD,WAAO,IAAP;AACD;AA1Be,CAAlB;AA6BA,OAAO,IAAM6C,OAAOd,0BAA0B,KAA1B,CAAb;AACPc,KAAK3B,SAAL,GAAiBA,SAAjB;AACA2B,KAAKC,WAAL,GAAmB,MAAnB;AAEA,OAAO,IAAMC,OAAOhB,0BAA0B,IAA1B,CAAb;AACPgB,KAAK7B,SAAL,GAAiBA,SAAjB;AACA6B,KAAKD,WAAL,GAAmB,MAAnB;AAKA,IAAME,eAAe9C,SAASH,aAAT,CAArB;AACA,OAAO,IAAMkD,cAAcpB,kBAAkB;AAAEW,SAAOQ,aAAaE,KAAb,CAAmBT;AAA5B,CAAlB,CAApB;AACPQ,YAAYH,WAAZ,GAA0B,aAA1B;AACA,OAAO,IAAMK,eAAetB,kBAAkB;AAAEW,SAAOQ,aAAaI,MAAb,CAAoBX;AAA7B,CAAlB,CAArB;AACPU,aAAaL,WAAb,GAA2B,cAA3B;AACA,OAAO,IAAMO,qBAAqBxB,kBAAkB;AAAEW,SAAOQ,aAAaM,OAAb,CAAqBb;AAA9B,CAAlB,CAA3B;AACPY,mBAAmBP,WAAnB,GAAiC,oBAAjC;AACA,OAAO,IAAMS,uBAAuB1B,kBAAkB;AAAEW,+BAAsBQ,aAAaI,MAAb,CAAoBI,QAA1C;AAAF,CAAlB,CAA7B;AACPD,qBAAqBT,WAArB,GAAmC,sBAAnC;AACA,OAAO,IAAMW,oBAAoB5B,kBAAkB;AAAEW,+BAAsBQ,aAAaI,MAAb,CAAoBM,QAA1C;AAAF,CAAlB,CAA1B;AACPD,kBAAkBX,WAAlB,GAAgC,mBAAhC","file":"components.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport MediaQuery from 'react-responsive'\nimport isNaN from 'lodash/isNaN';\nimport { defaultConfig, TAG } from './default-config'\nimport { ReactResponsiveConnect } from './react-responsive-connect';\nimport { getMedia } from './media'\nimport { getMediaMinWidthByType, getMediaMaxWidthByType, mediaQueryBuilder, isStringOrNumber, isString } from './helpers'\n\nexport const MediaQueryWrapper = (props = {}) => {\n  // eslint-disable-next-line no-unused-vars\n  const { children, isInvertMatch,  ...other } = props;\n  const values = { deviceWidth: MediaQueryWrapper.fakeWidth, width: MediaQueryWrapper.fakeWidth };\n  return (\n    <MediaQuery {...other} {...{ values }} >\n      {(matches) => {\n        if (matches) {\n          return isInvertMatch ? null : children;\n        }\n        return isInvertMatch ? children : null;\n      }}\n    </MediaQuery>\n  )\n};\n\nMediaQueryWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.string]),\n  dispatch: PropTypes.func.isRequired,\n  fakeWidth: PropTypes.number.isRequired,\n  isInvertMatch: PropTypes.bool,\n};\n\nMediaQueryWrapper.defaultProps = {\n  isInvertMatch: false,\n};\n\nMediaQueryWrapper.defaultProps = {\n  children: null,\n  component: 'div',\n};\n\nexport const responsiveWrapper = (props = {}) => (p => MediaQueryWrapper({ ...props, ...p }));\n\nconst generateShowHideComponent = isHideComponent => (props) => {\n  const media = getMedia(ReactResponsiveConnect.customConfig || defaultConfig);\n  const {\n    on,\n    from,\n    to,\n    children,\n  } = props;\n  const fromValue = isNaN(Number(from)) ? getMediaMinWidthByType(from, media) : from;\n  const toValue = isNaN(Number(to)) ? getMediaMaxWidthByType(to, media) : to;\n\n  if (on) {\n    if (media[on]) {\n      return MediaQueryWrapper({\n        query: media[on].mediaQuery,\n        isInvertMatch: isHideComponent,\n        children,\n      });\n    }\n    throw new Error(`${TAG} No ${on} definition in media configuration`);\n  }\n\n  if (from !== undefined && to !== undefined) {\n    return MediaQueryWrapper({\n      query: mediaQueryBuilder(fromValue, toValue),\n      isInvertMatch: isHideComponent,\n      children,\n    });\n  } else if (from !== undefined) {\n    return MediaQueryWrapper({\n      query: mediaQueryBuilder(fromValue, undefined),\n      isInvertMatch: isHideComponent,\n      children,\n    });\n  } else if (to !== undefined) {\n    return MediaQueryWrapper({\n      query: mediaQueryBuilder(undefined, toValue),\n      isInvertMatch: isHideComponent,\n      children,\n    });\n  }\n  return null;\n};\n\nconst propTypes = {\n  from: (props) => {\n    const { on, from } = props;\n    if (from !== undefined && !isStringOrNumber(from)) {\n      return new Error(`${TAG} Improper value type of the 'from' prop (${from}), only a String or a Number`);\n    } else if (from && on) {\n      return new Error(`${TAG} Used excluding props from and on`);\n    }\n    return null\n  },\n  on: (props) => {\n    const { on, from, to } = props;\n    if (on && !isString(on)) {\n      return new Error(`${TAG} Improper value type of the 'on' prop (${on}), only a String`);\n    } else if (on && (from || to)) {\n      return new Error(`${TAG} Used excluding props for and from or to!`);\n    }\n    return null;\n  },\n  to: ({ on, to }) => {\n    if (to !== undefined && !isStringOrNumber(to)) {\n      return new Error(`${TAG} Improper value type of the 'to' prop (${to}), only a String or a Number`);\n    } else if (to && on) {\n      return new Error(`${TAG} Used excluding props from and on`);\n    }\n    return null;\n  },\n};\n\nexport const Show = generateShowHideComponent(false);\nShow.propTypes = propTypes;\nShow.displayName = 'Show';\n\nexport const Hide = generateShowHideComponent(true);\nHide.propTypes = propTypes;\nHide.displayName = 'Hide';\n\n\n// Legacy for versions < 0.8.0\n// WARNING: Works only with the default config\nconst defaultMedia = getMedia(defaultConfig);\nexport const PhoneScreen = responsiveWrapper({ query: defaultMedia.phone.mediaQuery });\nPhoneScreen.displayName = 'PhoneScreen';\nexport const TabletScreen = responsiveWrapper({ query: defaultMedia.tablet.mediaQuery });\nTabletScreen.displayName = 'TabletScreen';\nexport const DesktopAndUpScreen = responsiveWrapper({ query: defaultMedia.desktop.mediaQuery });\nDesktopAndUpScreen.displayName = 'DesktopAndUpScreen';\nexport const PhoneAndTabletScreen = responsiveWrapper({ query: `(max-width: ${defaultMedia.tablet.maxWidth}px)` });\nPhoneAndTabletScreen.displayName = 'PhoneAndTabletScreen';\nexport const TabletAndUpScreen = responsiveWrapper({ query: `(min-width: ${defaultMedia.tablet.minWidth}px)` });\nTabletAndUpScreen.displayName = 'TabletAndUpScreen';\n"]}